{"ast":null,"code":"import CartContext from\"./CartContext\";import{useReducer}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const defaultCartState={items:[],totalAmount:0};const cartReducer=(state,action)=>{if(action.type==='ADD'){const updatedAmount=state.totalAmount+action.item.price*action.item.amount;const existingCartItemIndex=state.items.findIndex(item=>item.id===action.item.id);const existingCartItem=state.items[existingCartItemIndex];let updatedItems;if(existingCartItem){const updatedItem={...existingCartItem,amount:existingCartItem.amount+action.item.amount};updatedItems=[...state.items];updatedItems[existingCartItemIndex]=updatedItem;}else{updatedItems=[...state.items].concat(action.item);}return{items:updatedItems,totalAmount:updatedAmount};}if(action.type==='REMOVE'){const existingCartItemIndex=state.items.findIndex(item=>item.id===action.id);const existingItem=state.items[existingCartItemIndex];const updatedAmount=state.totalAmount-existingItem.price;let updatedItems;if(existingItem.amount===1){updatedItems=state.items.filter(item=>item.id!==action.id);}else{const updatedItem={...existingItem,amount:existingItem.amount-1};updatedItems=[...state.items];updatedItems[existingCartItemIndex]=updatedItem;}return{items:updatedItems,totalAmount:updatedAmount};}return defaultCartState;};const CartProvider=props=>{const[cartState,dispatchCartAction]=useReducer(cartReducer,defaultCartState);const addItemsHandler=item=>{dispatchCartAction({type:'ADD',item:item});};const removeItemsHandler=id=>{dispatchCartAction({type:'REMOVE',id:id});};const cartCtx={items:cartState.items,totalAmount:cartState.totalAmount,addItems:addItemsHandler,removeItems:removeItemsHandler};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartCtx,children:props.children});};export default CartProvider;","map":{"version":3,"names":["CartContext","useReducer","jsx","_jsx","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemsHandler","removeItemsHandler","cartCtx","addItems","removeItems","Provider","value","children"],"sources":["C:/Users/Ramadan/Documents/GitHub/Food-Order-App/src/Components/store/CartProvider.js"],"sourcesContent":["import CartContext from \"./CartContext\";\r\nimport { useReducer } from \"react\";\r\n\r\n\r\nconst defaultCartState = {\r\n    items : [],\r\n    totalAmount : 0,\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === 'ADD') {\r\n        const updatedAmount = state.totalAmount + action.item.price * action.item.amount ;\r\n\r\n        const existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\r\n\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n        let updatedItems;\r\n\r\n        if (existingCartItem) {\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount : existingCartItem.amount + action.item.amount\r\n            }\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem\r\n        } else {\r\n            updatedItems = [...state.items].concat(action.item);\r\n        }\r\n\r\n        return {\r\n            items : updatedItems,\r\n            totalAmount : updatedAmount,\r\n        }\r\n    }\r\n\r\n  if (action.type === 'REMOVE')  {\r\n    const existingCartItemIndex = state.items.findIndex((item) => item.id === action.id);\r\n\r\n    const existingItem = state.items[existingCartItemIndex];\r\n    const updatedAmount = state.totalAmount - existingItem.price;\r\n    let updatedItems;\r\n    \r\n    if(existingItem.amount === 1) {\r\n        updatedItems = state.items.filter(item => item.id !== action.id)\r\n    } else {\r\n         const updatedItem = {\r\n            ...existingItem,\r\n            amount : existingItem.amount - 1\r\n         }\r\n         updatedItems = [...state.items];\r\n         updatedItems[existingCartItemIndex] = updatedItem\r\n    }\r\n\r\n    return {\r\n        items : updatedItems,\r\n        totalAmount: updatedAmount\r\n    }\r\n  }\r\n\r\n    return defaultCartState\r\n\r\n\r\n}\r\n\r\nconst CartProvider  = (props) => {\r\n\r\n    const [cartState , dispatchCartAction] = useReducer(cartReducer, defaultCartState)\r\n\r\n\r\n\r\n   const addItemsHandler = (item) => {\r\n          dispatchCartAction({type : 'ADD' , item : item})\r\n   } \r\n\r\n   const removeItemsHandler = (id) => {\r\n          dispatchCartAction({type : 'REMOVE', id : id})\r\n   }\r\n\r\nconst cartCtx = {\r\n    items :cartState.items,\r\n    totalAmount : cartState.totalAmount,\r\n    addItems : addItemsHandler,\r\n    removeItems : removeItemsHandler\r\n\r\n}\r\n\r\n\r\n    return ( \r\n        <CartContext.Provider value={cartCtx}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n     );\r\n}\r\n \r\nexport default CartProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}